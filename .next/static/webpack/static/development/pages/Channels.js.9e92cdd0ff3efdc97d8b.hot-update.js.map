{"version":3,"file":"static/webpack/static\\development\\pages\\Channels.js.9e92cdd0ff3efdc97d8b.hot-update.js","sources":["webpack:///./pages/Channels.js"],"sourcesContent":["import Layout from './Layout';\r\nimport styled from 'styled-components';\r\nimport ReactPlayer from 'react-player';\r\n\r\nlet channelNames = [\r\n    {   name: 'Ant 1',\r\n        url: \"https://antennalivesp-lh.akamaihd.net/i/live_1@715138/index_800_av-p.m3u8\"},\r\n    {   name: 'Alpha',\r\n        url: \"https://alphalive-i.akamaihd.net/hls/live/682300/live/high/prog_index.m3u8\"},\r\n    {   name: 'Mega',\r\n        url: \"https://c98db5952cb54b358365984178fb898a.msvdn.net/live/S86713049/gonOwuUacAxM/playlist.m3u8\"},\r\n    {   name: 'Star',\r\n        url: \"https://cdnapisec.siliconweb.com/p/713821/sp/0/playManifest/entryId/1_fp7fyi3j/format/applehttp/protocol/https/flavorParamId/0/manifest.m3u8\"},\r\n    {   name: 'Skai',\r\n        url: \"https://youtu.be/CmqbY_Gzsdo\"},\r\n    {   name: 'Ert 1',\r\n        url: \"https://ert-live.siliconweb.com/media/ert_1/ert_1medium.m3u8\"},\r\n    {   name: 'Ert 2',\r\n        url: \"https://ert-live.siliconweb.com/media/ert_2/ert_2medium.m3u8\"},\r\n    {   name: 'Ert Sports',\r\n        url: \"https://ert-live.siliconweb.com/media/ert_sports/ert_sportshigh.m3u8\"},\r\n];\r\n\r\nconst StyledDiv = styled.div`\r\n    width: 580px !important;\r\n    margin: 0 auto !important;\r\n`;\r\nconst StopButtonDiv = styled.div`\r\n    width: 580px !important;\r\n    margin: 0 auto !important;\r\n    button {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport default class Channels extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeChannel: '',\r\n            url: null,\r\n            playing: true,\r\n            controls: true,\r\n            volume: 0.8,\r\n            muted: false,\r\n            loaded: 0,\r\n            pip: false,\r\n            light: false\r\n        }\r\n        // this.selectChannel = this.selectChannel.bind(this);\r\n        this.playChannel = this.playChannel.bind(this);\r\n        this.clearPlayer = this.clearPlayer.bind(this);\r\n        this.changeChannel = this.changeChannel.bind(this);\r\n    }\r\n\r\n    // create the channel buttons function\r\n    createButtons = () => {\r\n        let buttons = [];\r\n        channelNames.forEach(channel => {\r\n            buttons.push(<button key={channel.name} type=\"button\" className = \"btn btn-outline-info mt-2 mr-2\" onClick={this.changeChannel}>{channel.name}</button>)\r\n        });\r\n        return buttons;\r\n    }\r\n\r\n    // set active channel name\r\n    changeChannel = event => {\r\n        // this.clearPlayer();\r\n        console.log(`name: ${this.state.name}, url: ${this.state.url}, playing: ${this.state.playing}`)\r\n        let name = event.target.textContent\r\n        let ch = channelNames.filter(channel => channel.name === name);\r\n        this.setState({\r\n            activeChannel: event.target.textContent,\r\n            url: ch[0].url,\r\n            playing: true,\r\n            loaded: 0,\r\n            pip: false,\r\n        })\r\n    }\r\n\r\n    // clear player\r\n    clearPlayer = () => {\r\n        this.setState({ \r\n            url: '',\r\n            playing: false \r\n        });\r\n    }\r\n\r\n    // player reference\r\n    ref = player => {\r\n        this.player = player;\r\n    }\r\n\r\n    // Player creation and use\r\n    playChannel = () => {\r\n        if(this.state.activeChannel != '') {\r\n            return (\r\n                <><p className = \"text-center\">loaded: {this.state.loaded}</p>\r\n                <ReactPlayer \r\n                    ref = {this.ref}\r\n                    className = \"react-player\"\r\n                    width = \"1200px\"\r\n                    height = \"675px\"\r\n                    url = {this.state.url}\r\n                    pip = {this.state.pip}\r\n                    light = {this.state.light}\r\n                    playing = {this.state.playing}\r\n                    controls = {this.state.controls}\r\n                    volume = {this.state.volume}\r\n                    muted = {this.state.muted} /></>\r\n            )            \r\n        }else {\r\n            return <p className = \"text-center\">Please select a channel!</p> \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>     \r\n                <StyledDiv>\r\n                    {this.createButtons()}\r\n                </StyledDiv>\r\n                <hr className=\"hr\"/>\r\n                <StopButtonDiv>\r\n                    <button key=\"one\" type=\"button\" className = \"btn btn-primary\" onClick={this.clearPlayer}>Stop Channel</button>\r\n                </StopButtonDiv>\r\n                <hr className=\"hr\"/>\r\n                {this.playChannel()}\r\n            </Layout>\r\n        )\r\n    }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AADA;AAEA;AACA;AADA;AAEA;AACA;AADA;AAEA;AACA;AADA;AAEA;AACA;AADA;AAEA;AACA;AADA;AAEA;AACA;AADA;AAEA;AACA;AADA;AAIA;AAIA;AACA;AAOA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAqBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AA3BA;AA8BA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AA1CA;AA6CA;AACA;AACA;AAFA;AAIA;AACA;AAlDA;AAqDA;AACA;AACA;AAvDA;AA0DA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AA5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAWA;AACA;AACA;AAhBA;AAiBA;AACA;AACA;;;AA4DA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA9FA;AACA;;;;;A","sourceRoot":""}