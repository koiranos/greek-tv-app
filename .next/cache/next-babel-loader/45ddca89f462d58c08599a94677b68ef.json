{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\panag\\\\Documents\\\\Programming\\\\projects\\\\tv_app\\\\pages\\\\Channels.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from './Layout';\nimport styled from 'styled-components';\nimport ReactPlayer from 'react-player';\nlet channelNames = [{\n  name: 'Ant 1',\n  url: \"https://antennalivesp-lh.akamaihd.net/i/live_1@715138/index_800_av-p.m3u8\"\n}, {\n  name: 'Alpha',\n  url: \"https://alphalive-i.akamaihd.net/hls/live/682300/live/high/prog_index.m3u8\"\n}, {\n  name: 'Mega',\n  url: \"https://c98db5952cb54b358365984178fb898a.msvdn.net/live/S86713049/gonOwuUacAxM/playlist.m3u8\"\n}, {\n  name: 'Star',\n  url: \"https://cdnapisec.siliconweb.com/p/713821/sp/0/playManifest/entryId/1_fp7fyi3j/format/applehttp/protocol/https/flavorParamId/0/manifest.m3u8\"\n}, {\n  name: 'Skai',\n  url: \"https://youtu.be/CmqbY_Gzsdo\"\n}, {\n  name: 'Ert 1',\n  url: \"https://ert-live.siliconweb.com/media/ert_1/ert_1medium.m3u8\"\n}, {\n  name: 'Ert 2',\n  url: \"https://ert-live.siliconweb.com/media/ert_2/ert_2medium.m3u8\"\n}, {\n  name: 'Ert Sports',\n  url: \"https://ert-live.siliconweb.com/media/ert_sports/ert_sportshigh.m3u8\"\n}];\nconst StyledDiv = styled.div`\n    width: 580px !important;\n    margin: 0 auto !important;\n`;\nconst StyledButton = styled.button`\n    width: 580px !important;\n    margin: 0 auto !important;\n    align-self: auto;\n`;\nexport default class Channels extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"createButtons\", () => {\n      let buttons = [];\n      channelNames.forEach(channel => {\n        buttons.push(__jsx(\"button\", {\n          key: channel.name,\n          type: \"button\",\n          className: \"btn btn-outline-info mt-2 mr-2\",\n          onClick: this.changeChannel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 26\n          }\n        }, channel.name));\n      });\n      return buttons;\n    });\n\n    _defineProperty(this, \"changeChannel\", event => {\n      // this.clearPlayer();\n      console.log(`name: ${this.state.name}, url: ${this.state.url}, playing: ${this.state.playing}`);\n      let name = event.target.textContent;\n      let ch = channelNames.filter(channel => channel.name === name);\n      this.setState({\n        activeChannel: event.target.textContent,\n        url: ch[0].url,\n        playing: true,\n        loaded: 0,\n        pip: false\n      });\n    });\n\n    _defineProperty(this, \"clearPlayer\", () => {\n      this.setState({\n        url: '',\n        playing: false\n      });\n    });\n\n    _defineProperty(this, \"ref\", player => {\n      this.player = player;\n    });\n\n    _defineProperty(this, \"playChannel\", () => {\n      if (this.state.activeChannel != '') {\n        return __jsx(React.Fragment, null, __jsx(\"p\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 19\n          }\n        }, \"loaded: \", this.state.loaded), __jsx(ReactPlayer, {\n          ref: this.ref,\n          className: \"react-player\",\n          width: \"80%\",\n          height: \"80%\",\n          url: this.state.url,\n          pip: this.state.pip,\n          light: this.state.light,\n          playing: this.state.playing,\n          controls: this.state.controls,\n          volume: this.state.volume,\n          muted: this.state.muted,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }\n        }));\n      } else {\n        return __jsx(\"p\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 20\n          }\n        }, \"Please select a channel!\");\n      }\n    });\n\n    this.state = {\n      activeChannel: '',\n      url: null,\n      playing: true,\n      controls: true,\n      volume: 0.8,\n      muted: false,\n      loaded: 0,\n      pip: false,\n      light: false\n    }; // this.selectChannel = this.selectChannel.bind(this);\n\n    this.playChannel = this.playChannel.bind(this);\n    this.clearPlayer = this.clearPlayer.bind(this);\n    this.changeChannel = this.changeChannel.bind(this);\n  } // create the channel buttons function\n\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, __jsx(StyledDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, this.createButtons()), __jsx(\"hr\", {\n      className: \"hr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }), __jsx(StyledButton, {\n      key: \"one\",\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.clearPlayer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, \"Stop Channel\"), __jsx(\"hr\", {\n      className: \"hr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }), this.playChannel());\n  }\n\n}","map":{"version":3,"sources":["C:/Users/panag/Documents/Programming/projects/tv_app/pages/Channels.js"],"names":["Layout","styled","ReactPlayer","channelNames","name","url","StyledDiv","div","StyledButton","button","Channels","React","Component","constructor","props","buttons","forEach","channel","push","changeChannel","event","console","log","state","playing","target","textContent","ch","filter","setState","activeChannel","loaded","pip","player","ref","light","controls","volume","muted","playChannel","bind","clearPlayer","render","createButtons"],"mappings":"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","sourcesContent":["import Layout from './Layout';\r\nimport styled from 'styled-components';\r\nimport ReactPlayer from 'react-player';\r\n\r\nlet channelNames = [\r\n    {   name: 'Ant 1',\r\n        url: \"https://antennalivesp-lh.akamaihd.net/i/live_1@715138/index_800_av-p.m3u8\"},\r\n    {   name: 'Alpha',\r\n        url: \"https://alphalive-i.akamaihd.net/hls/live/682300/live/high/prog_index.m3u8\"},\r\n    {   name: 'Mega',\r\n        url: \"https://c98db5952cb54b358365984178fb898a.msvdn.net/live/S86713049/gonOwuUacAxM/playlist.m3u8\"},\r\n    {   name: 'Star',\r\n        url: \"https://cdnapisec.siliconweb.com/p/713821/sp/0/playManifest/entryId/1_fp7fyi3j/format/applehttp/protocol/https/flavorParamId/0/manifest.m3u8\"},\r\n    {   name: 'Skai',\r\n        url: \"https://youtu.be/CmqbY_Gzsdo\"},\r\n    {   name: 'Ert 1',\r\n        url: \"https://ert-live.siliconweb.com/media/ert_1/ert_1medium.m3u8\"},\r\n    {   name: 'Ert 2',\r\n        url: \"https://ert-live.siliconweb.com/media/ert_2/ert_2medium.m3u8\"},\r\n    {   name: 'Ert Sports',\r\n        url: \"https://ert-live.siliconweb.com/media/ert_sports/ert_sportshigh.m3u8\"},\r\n];\r\n\r\nconst StyledDiv = styled.div`\r\n    width: 580px !important;\r\n    margin: 0 auto !important;\r\n`;\r\nconst StyledButton = styled.button`\r\n    width: 580px !important;\r\n    margin: 0 auto !important;\r\n    align-self: auto;\r\n`;\r\n\r\nexport default class Channels extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeChannel: '',\r\n            url: null,\r\n            playing: true,\r\n            controls: true,\r\n            volume: 0.8,\r\n            muted: false,\r\n            loaded: 0,\r\n            pip: false,\r\n            light: false\r\n        }\r\n        // this.selectChannel = this.selectChannel.bind(this);\r\n        this.playChannel = this.playChannel.bind(this);\r\n        this.clearPlayer = this.clearPlayer.bind(this);\r\n        this.changeChannel = this.changeChannel.bind(this);\r\n    }\r\n\r\n    // create the channel buttons function\r\n    createButtons = () => {\r\n        let buttons = [];\r\n        channelNames.forEach(channel => {\r\n            buttons.push(<button key={channel.name} type=\"button\" className = \"btn btn-outline-info mt-2 mr-2\" onClick={this.changeChannel}>{channel.name}</button>)\r\n        });\r\n        return buttons;\r\n    }\r\n\r\n    // set active channel name\r\n    changeChannel = event => {\r\n        // this.clearPlayer();\r\n        console.log(`name: ${this.state.name}, url: ${this.state.url}, playing: ${this.state.playing}`)\r\n        let name = event.target.textContent\r\n        let ch = channelNames.filter(channel => channel.name === name);\r\n        this.setState({\r\n            activeChannel: event.target.textContent,\r\n            url: ch[0].url,\r\n            playing: true,\r\n            loaded: 0,\r\n            pip: false,\r\n        })\r\n    }\r\n\r\n    // clear player\r\n    clearPlayer = () => {\r\n        this.setState({ \r\n            url: '',\r\n            playing: false \r\n        });\r\n    }\r\n\r\n    // player reference\r\n    ref = player => {\r\n        this.player = player;\r\n    }\r\n\r\n    // Player creation and use\r\n    playChannel = () => {\r\n        if(this.state.activeChannel != '') {\r\n            return (\r\n                <><p className = \"text-center\">loaded: {this.state.loaded}</p>\r\n                <ReactPlayer \r\n                    ref = {this.ref}\r\n                    className = \"react-player\"\r\n                    width = \"80%\"\r\n                    height = \"80%\"\r\n                    url = {this.state.url}\r\n                    pip = {this.state.pip}\r\n                    light = {this.state.light}\r\n                    playing = {this.state.playing}\r\n                    controls = {this.state.controls}\r\n                    volume = {this.state.volume}\r\n                    muted = {this.state.muted} /></>\r\n            )            \r\n        }else {\r\n            return <p className = \"text-center\">Please select a channel!</p> \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>     \r\n                <StyledDiv>\r\n                    {this.createButtons()}\r\n                </StyledDiv>\r\n                <hr className=\"hr\"/>\r\n                    <StyledButton key=\"one\" type=\"button\" className = \"btn btn-primary\" onClick={this.clearPlayer}>Stop Channel</StyledButton>\r\n                <hr className=\"hr\"/>\r\n                {this.playChannel()}\r\n            </Layout>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}