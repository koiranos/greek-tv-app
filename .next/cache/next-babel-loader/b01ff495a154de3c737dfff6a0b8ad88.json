{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\panag\\\\Documents\\\\Programming\\\\projects\\\\tv_app\\\\pages\\\\Channels.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import Link from 'next/link';\nimport Layout from './Layout';\nimport styled from 'styled-components'; // import NewPlayer from './components/NewPlayer';\n// import MyPlayer from './components/MyPlayer';\n// import NavBar from './components/navbar';\n\nimport ReactPlayer from 'react-player';\nlet channelNames = [{\n  name: 'Ant 1',\n  url: \"https://antennalivesp-lh.akamaihd.net/i/live_1@715138/index_800_av-p.m3u8\"\n}, {\n  name: 'Alpha',\n  url: \"https://alphalive-i.akamaihd.net/hls/live/682300/live/high/prog_index.m3u8\"\n}, {\n  name: 'Mega',\n  url: \"https://c98db5952cb54b358365984178fb898a.msvdn.net/live/S86713049/gonOwuUacAxM/playlist.m3u8\"\n}, {\n  name: 'Star',\n  url: \"https://cdnapisec.siliconweb.com/p/713821/sp/0/playManifest/entryId/1_fp7fyi3j/format/applehttp/protocol/https/flavorParamId/0/manifest.m3u8\"\n}, {\n  name: 'Skai',\n  url: \"https://youtu.be/CmqbY_Gzsdo\"\n}, {\n  name: 'Ert 1',\n  url: \"https://ert-live.siliconweb.com/media/ert_1/ert_1medium.m3u8\"\n}, {\n  name: 'Ert 2',\n  url: \"https://ert-live.siliconweb.com/media/ert_2/ert_2medium.m3u8\"\n}, {\n  name: 'Ert Sports',\n  url: \"https://ert-live.siliconweb.com/media/ert_sports/ert_sportshigh.m3u8\"\n}];\nconst StyledDiv = styled.div`\n    width: 580px !important;\n    margin: 0 auto !important;\n`;\nexport default class Channels extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"createButtons\", () => {\n      let buttons = [];\n      channelNames.forEach(channel => {\n        buttons.push(__jsx(\"button\", {\n          key: channel.name,\n          type: \"button\",\n          className: \"btn btn-outline-info mt-2 mr-2\",\n          onClick: this.selectChannel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 26\n          }\n        }, channel.name));\n      });\n      return buttons;\n    });\n\n    _defineProperty(this, \"selectChannel\", event => {\n      this.setState({\n        activeChannel: event.target.textContent,\n        url: this.handleLoad(event.target.textContent) // playerType: event.target.textContent === 'Skai'? 1:0\n\n      });\n    });\n\n    _defineProperty(this, \"handleLoad\", name => {\n      let ch = channelNames.filter(channel => channel.name === name);\n      return ch.url;\n    });\n\n    _defineProperty(this, \"playChannel\", () => {\n      if (this.state.activeChannel != '') {// <ReactPlayer \n        //     ref = {this.ref}\n        //     className = \"react-player\"\n        //     width = \"100%\"\n        //     height = \"100%\"\n        //     url = {this.handleLoad(this.state.url)}\n        //     playing = {this.state.playing}\n        //     controls = {this.state.controls}\n        //     volume = {this.state.volume}\n        //     muted = {this.state.muted} />\n      } else {\n        return __jsx(\"p\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 24\n          }\n        }, \"Select a channel to stream.\");\n      } // if(this.state.activeChannel != '') {\n      //     return (\n      //         <p className=\"text-center\">{this.state.activeChannel}</p>\n      //         // <MyPlayer url = {channels[this.state.current]} />\n      //         // <NewPlayer url = {channels[this.state.current]} playerType={this.state.playerType} />\n      //     )\n      // }else {\n      //     return <p className=\"text-center\">Select a channel to stream.</p>\n      // }\n\n    });\n\n    this.state = {\n      activeChannel: '',\n      // playerType: 0,\n      // oldState: '',\n      url: null,\n      playing: true,\n      controls: false,\n      volume: 0.8,\n      muted: false,\n      played: 0,\n      loaded: 0\n    };\n    this.selectChannel = this.selectChannel.bind(this);\n    this.playChannel = this.playChannel.bind(this);\n  } // create the channel buttons function\n\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, __jsx(StyledDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, this.createButtons()), __jsx(\"hr\", {\n      className: \"hr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }), this.playChannel());\n  }\n\n}","map":{"version":3,"sources":["C:/Users/panag/Documents/Programming/projects/tv_app/pages/Channels.js"],"names":["Layout","styled","ReactPlayer","channelNames","name","url","StyledDiv","div","Channels","React","Component","constructor","props","buttons","forEach","channel","push","selectChannel","event","setState","activeChannel","target","textContent","handleLoad","ch","filter","state","playing","controls","volume","muted","played","loaded","bind","playChannel","render","createButtons"],"mappings":"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","sourcesContent":["// import Link from 'next/link';\r\nimport Layout from './Layout';\r\nimport styled from 'styled-components';\r\n// import NewPlayer from './components/NewPlayer';\r\n// import MyPlayer from './components/MyPlayer';\r\n// import NavBar from './components/navbar';\r\n\r\nimport ReactPlayer from 'react-player';\r\n\r\nlet channelNames = [\r\n    {   name: 'Ant 1',\r\n        url: \"https://antennalivesp-lh.akamaihd.net/i/live_1@715138/index_800_av-p.m3u8\"},\r\n    {   name: 'Alpha',\r\n        url: \"https://alphalive-i.akamaihd.net/hls/live/682300/live/high/prog_index.m3u8\"},\r\n    {   name: 'Mega',\r\n        url: \"https://c98db5952cb54b358365984178fb898a.msvdn.net/live/S86713049/gonOwuUacAxM/playlist.m3u8\"},\r\n    {   name: 'Star',\r\n        url: \"https://cdnapisec.siliconweb.com/p/713821/sp/0/playManifest/entryId/1_fp7fyi3j/format/applehttp/protocol/https/flavorParamId/0/manifest.m3u8\"},\r\n    {   name: 'Skai',\r\n        url: \"https://youtu.be/CmqbY_Gzsdo\"},\r\n    {   name: 'Ert 1',\r\n        url: \"https://ert-live.siliconweb.com/media/ert_1/ert_1medium.m3u8\"},\r\n    {   name: 'Ert 2',\r\n        url: \"https://ert-live.siliconweb.com/media/ert_2/ert_2medium.m3u8\"},\r\n    {   name: 'Ert Sports',\r\n        url: \"https://ert-live.siliconweb.com/media/ert_sports/ert_sportshigh.m3u8\"},\r\n];\r\n\r\nconst StyledDiv = styled.div`\r\n    width: 580px !important;\r\n    margin: 0 auto !important;\r\n`;\r\n\r\nexport default class Channels extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeChannel: '',\r\n            // playerType: 0,\r\n            // oldState: '',\r\n            url: null,\r\n            playing: true,\r\n            controls: false,\r\n            volume: 0.8,\r\n            muted: false,\r\n            played: 0,\r\n            loaded: 0,\r\n        }\r\n        this.selectChannel = this.selectChannel.bind(this);\r\n        this.playChannel = this.playChannel.bind(this);\r\n    }\r\n\r\n    // create the channel buttons function\r\n    createButtons = () => {\r\n        let buttons = [];\r\n        channelNames.forEach(channel => {\r\n            buttons.push(<button key={channel.name} type=\"button\" className = \"btn btn-outline-info mt-2 mr-2\" onClick={this.selectChannel}>{channel.name}</button>)\r\n        });\r\n        return buttons;\r\n    }\r\n\r\n    // set active channel name\r\n    selectChannel = event => {\r\n        this.setState({\r\n            activeChannel: event.target.textContent,\r\n            url: this.handleLoad(event.target.textContent)\r\n            // playerType: event.target.textContent === 'Skai'? 1:0\r\n        })\r\n    }\r\n\r\n    // set channel url\r\n\r\n    // handle new url\r\n    handleLoad = name => {\r\n        let ch = channelNames.filter(channel => channel.name === name);\r\n        return ch.url;\r\n    }\r\n    // when paused\r\n\r\n    // player reference\r\n\r\n    // Player creation and use\r\n    playChannel = () => {\r\n        if(this.state.activeChannel != '') {\r\n            // <ReactPlayer \r\n            //     ref = {this.ref}\r\n            //     className = \"react-player\"\r\n            //     width = \"100%\"\r\n            //     height = \"100%\"\r\n            //     url = {this.handleLoad(this.state.url)}\r\n            //     playing = {this.state.playing}\r\n            //     controls = {this.state.controls}\r\n            //     volume = {this.state.volume}\r\n            //     muted = {this.state.muted} />\r\n        }else { return <p className=\"text-center\">Select a channel to stream.</p>}\r\n        // if(this.state.activeChannel != '') {\r\n        //     return (\r\n        //         <p className=\"text-center\">{this.state.activeChannel}</p>\r\n        //         // <MyPlayer url = {channels[this.state.current]} />\r\n        //         // <NewPlayer url = {channels[this.state.current]} playerType={this.state.playerType} />\r\n        //     )\r\n        // }else {\r\n        //     return <p className=\"text-center\">Select a channel to stream.</p>\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>     \r\n                <StyledDiv>\r\n                    {this.createButtons()}\r\n                </StyledDiv>\r\n                <hr className=\"hr\"/>\r\n                {this.playChannel()}\r\n            </Layout>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}