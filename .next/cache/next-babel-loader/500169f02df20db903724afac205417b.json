{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\panag\\\\Documents\\\\Programming\\\\projects\\\\tv_app\\\\pages\\\\Channels.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    width: 580px !important;\\n    margin: 0 auto !important;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// import Link from 'next/link';\nimport Layout from './Layout';\nimport styled from 'styled-components'; // import NewPlayer from './components/NewPlayer';\n// import MyPlayer from './components/MyPlayer';\n// import NavBar from './components/navbar';\n\nimport ReactPlayer from 'react-player';\nvar channelNames = [{\n  name: 'Ant 1',\n  url: \"https://antennalivesp-lh.akamaihd.net/i/live_1@715138/index_800_av-p.m3u8\"\n}, {\n  name: 'Alpha',\n  url: \"https://alphalive-i.akamaihd.net/hls/live/682300/live/high/prog_index.m3u8\"\n}, {\n  name: 'Mega',\n  url: \"https://c98db5952cb54b358365984178fb898a.msvdn.net/live/S86713049/gonOwuUacAxM/playlist.m3u8\"\n}, {\n  name: 'Star',\n  url: \"https://cdnapisec.siliconweb.com/p/713821/sp/0/playManifest/entryId/1_fp7fyi3j/format/applehttp/protocol/https/flavorParamId/0/manifest.m3u8\"\n}, {\n  name: 'Skai',\n  url: \"https://youtu.be/CmqbY_Gzsdo\"\n}, {\n  name: 'Ert 1',\n  url: \"https://ert-live.siliconweb.com/media/ert_1/ert_1medium.m3u8\"\n}, {\n  name: 'Ert 2',\n  url: \"https://ert-live.siliconweb.com/media/ert_2/ert_2medium.m3u8\"\n}, {\n  name: 'Ert Sports',\n  url: \"https://ert-live.siliconweb.com/media/ert_sports/ert_sportshigh.m3u8\"\n}];\nvar StyledDiv = styled.div(_templateObject());\n\nvar Channels = /*#__PURE__*/function (_React$Component) {\n  _inherits(Channels, _React$Component);\n\n  var _super = _createSuper(Channels);\n\n  function Channels(props) {\n    var _this;\n\n    _classCallCheck(this, Channels);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"createButtons\", function () {\n      var buttons = [];\n      channelNames.forEach(function (channel) {\n        buttons.push(__jsx(\"button\", {\n          key: channel.name,\n          type: \"button\",\n          className: \"btn btn-outline-info mt-2 mr-2\",\n          onClick: _this.selectChannel,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 26\n          }\n        }, channel.name));\n      });\n      return buttons;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"selectChannel\", function (event) {\n      var name = event.target.textContent;\n      var ch = channelNames.filter(function (channel) {\n        return channel.name === name;\n      });\n\n      _this.setState({\n        activeChannel: event.target.textContent,\n        url: ch[0].url\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"playChannel\", function () {\n      if (_this.state.activeChannel != '') {\n        return __jsx(\"p\", {\n          className: \"text-center\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 20\n          }\n        }, \"the url is: \", _this.state.url); // return (<p className=\"text-center\">{this.state.url}</p>)\n        // <ReactPlayer \n        //     ref = {this.ref}\n        //     className = \"react-player\"\n        //     width = \"100%\"\n        //     height = \"100%\"\n        //     url = {this.handleLoad(this.state.url)}\n        //     playing = {this.state.playing}\n        //     controls = {this.state.controls}\n        //     volume = {this.state.volume}\n        //     muted = {this.state.muted} />\n      } else {\n        return __jsx(\"p\", {\n          className: \"text-center\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 20\n          }\n        }, \"my nigga error!\"); // return (<p className=\"text-center\">Select a channel to stream.</p>) \n      } // if(this.state.activeChannel != '') {\n      //     return (\n      //         <p className=\"text-center\">{this.state.activeChannel}</p>\n      //         // <MyPlayer url = {channels[this.state.current]} />\n      //         // <NewPlayer url = {channels[this.state.current]} playerType={this.state.playerType} />\n      //     )\n      // }else {\n      //     return <p className=\"text-center\">Select a channel to stream.</p>\n      // }\n\n    });\n\n    _this.state = {\n      activeChannel: '',\n      // playerType: 0,\n      // oldState: '',\n      url: null,\n      playing: true,\n      controls: false,\n      volume: 0.8,\n      muted: false,\n      played: 0,\n      loaded: 0\n    };\n    _this.selectChannel = _this.selectChannel.bind(_assertThisInitialized(_this));\n    _this.playChannel = _this.playChannel.bind(_assertThisInitialized(_this)); // this.handleLoad = this.handleLoad.bind(this);\n\n    return _this;\n  } // create the channel buttons function\n\n\n  _createClass(Channels, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }, __jsx(StyledDiv, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, this.createButtons()), __jsx(\"hr\", {\n        className: \"hr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }), this.playChannel());\n    }\n  }]);\n\n  return Channels;\n}(React.Component);\n\nexport { Channels as default };","map":{"version":3,"sources":["C:/Users/panag/Documents/Programming/projects/tv_app/pages/Channels.js"],"names":["Layout","styled","ReactPlayer","channelNames","name","url","StyledDiv","div","Channels","props","buttons","forEach","channel","push","selectChannel","event","target","textContent","ch","filter","setState","activeChannel","state","playing","controls","volume","muted","played","loaded","bind","playChannel","createButtons","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;AACA;AACA;;AAEA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,IAAIC,YAAY,GAAG,CACf;AAAIC,EAAAA,IAAI,EAAE,OAAV;AACIC,EAAAA,GAAG,EAAE;AADT,CADe,EAGf;AAAID,EAAAA,IAAI,EAAE,OAAV;AACIC,EAAAA,GAAG,EAAE;AADT,CAHe,EAKf;AAAID,EAAAA,IAAI,EAAE,MAAV;AACIC,EAAAA,GAAG,EAAE;AADT,CALe,EAOf;AAAID,EAAAA,IAAI,EAAE,MAAV;AACIC,EAAAA,GAAG,EAAE;AADT,CAPe,EASf;AAAID,EAAAA,IAAI,EAAE,MAAV;AACIC,EAAAA,GAAG,EAAE;AADT,CATe,EAWf;AAAID,EAAAA,IAAI,EAAE,OAAV;AACIC,EAAAA,GAAG,EAAE;AADT,CAXe,EAaf;AAAID,EAAAA,IAAI,EAAE,OAAV;AACIC,EAAAA,GAAG,EAAE;AADT,CAbe,EAef;AAAID,EAAAA,IAAI,EAAE,YAAV;AACIC,EAAAA,GAAG,EAAE;AADT,CAfe,CAAnB;AAmBA,IAAMC,SAAS,GAAGL,MAAM,CAACM,GAAV,mBAAf;;IAKqBC,Q;;;;;AACjB,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,oEAoBH,YAAM;AAClB,UAAIC,OAAO,GAAG,EAAd;AACAP,MAAAA,YAAY,CAACQ,OAAb,CAAqB,UAAAC,OAAO,EAAI;AAC5BF,QAAAA,OAAO,CAACG,IAAR,CAAa;AAAQ,UAAA,GAAG,EAAED,OAAO,CAACR,IAArB;AAA2B,UAAA,IAAI,EAAC,QAAhC;AAAyC,UAAA,SAAS,EAAG,gCAArD;AAAsF,UAAA,OAAO,EAAE,MAAKU,aAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoHF,OAAO,CAACR,IAA5H,CAAb;AACH,OAFD;AAGA,aAAOM,OAAP;AACH,KA1BkB;;AAAA,oEA6BH,UAAAK,KAAK,EAAI;AACrB,UAAIX,IAAI,GAAGW,KAAK,CAACC,MAAN,CAAaC,WAAxB;AACA,UAAIC,EAAE,GAAGf,YAAY,CAACgB,MAAb,CAAoB,UAAAP,OAAO;AAAA,eAAIA,OAAO,CAACR,IAAR,KAAiBA,IAArB;AAAA,OAA3B,CAAT;;AACA,YAAKgB,QAAL,CAAc;AACVC,QAAAA,aAAa,EAAEN,KAAK,CAACC,MAAN,CAAaC,WADlB;AAEVZ,QAAAA,GAAG,EAAEa,EAAE,CAAC,CAAD,CAAF,CAAMb;AAFD,OAAd;AAIH,KApCkB;;AAAA,kEAkDL,YAAM;AAChB,UAAG,MAAKiB,KAAL,CAAWD,aAAX,IAA4B,EAA/B,EAAmC;AAC/B,eAAO;AAAG,UAAA,SAAS,EAAG,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA0C,MAAKC,KAAL,CAAWjB,GAArD,CAAP,CAD+B,CAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,OAbD,MAaM;AACF,eAAO;AAAG,UAAA,SAAS,EAAG,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP,CADE,CAEF;AACH,OAjBe,CAkBhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH,KA7EkB;;AAEf,UAAKiB,KAAL,GAAa;AACTD,MAAAA,aAAa,EAAE,EADN;AAET;AACA;AACAhB,MAAAA,GAAG,EAAE,IAJI;AAKTkB,MAAAA,OAAO,EAAE,IALA;AAMTC,MAAAA,QAAQ,EAAE,KAND;AAOTC,MAAAA,MAAM,EAAE,GAPC;AAQTC,MAAAA,KAAK,EAAE,KARE;AASTC,MAAAA,MAAM,EAAE,CATC;AAUTC,MAAAA,MAAM,EAAE;AAVC,KAAb;AAYA,UAAKd,aAAL,GAAqB,MAAKA,aAAL,CAAmBe,IAAnB,+BAArB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,+BAAnB,CAfe,CAgBf;;AAhBe;AAiBlB,G,CAED;;;;;6BA4DS;AACL,aACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKE,aAAL,EADL,CADJ,EAII;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKK,KAAKD,WAAL,EALL,CADJ;AASH;;;;EA1FiCE,KAAK,CAACC,S;;SAAvBzB,Q","sourcesContent":["// import Link from 'next/link';\r\nimport Layout from './Layout';\r\nimport styled from 'styled-components';\r\n// import NewPlayer from './components/NewPlayer';\r\n// import MyPlayer from './components/MyPlayer';\r\n// import NavBar from './components/navbar';\r\n\r\nimport ReactPlayer from 'react-player';\r\n\r\nlet channelNames = [\r\n    {   name: 'Ant 1',\r\n        url: \"https://antennalivesp-lh.akamaihd.net/i/live_1@715138/index_800_av-p.m3u8\"},\r\n    {   name: 'Alpha',\r\n        url: \"https://alphalive-i.akamaihd.net/hls/live/682300/live/high/prog_index.m3u8\"},\r\n    {   name: 'Mega',\r\n        url: \"https://c98db5952cb54b358365984178fb898a.msvdn.net/live/S86713049/gonOwuUacAxM/playlist.m3u8\"},\r\n    {   name: 'Star',\r\n        url: \"https://cdnapisec.siliconweb.com/p/713821/sp/0/playManifest/entryId/1_fp7fyi3j/format/applehttp/protocol/https/flavorParamId/0/manifest.m3u8\"},\r\n    {   name: 'Skai',\r\n        url: \"https://youtu.be/CmqbY_Gzsdo\"},\r\n    {   name: 'Ert 1',\r\n        url: \"https://ert-live.siliconweb.com/media/ert_1/ert_1medium.m3u8\"},\r\n    {   name: 'Ert 2',\r\n        url: \"https://ert-live.siliconweb.com/media/ert_2/ert_2medium.m3u8\"},\r\n    {   name: 'Ert Sports',\r\n        url: \"https://ert-live.siliconweb.com/media/ert_sports/ert_sportshigh.m3u8\"},\r\n];\r\n\r\nconst StyledDiv = styled.div`\r\n    width: 580px !important;\r\n    margin: 0 auto !important;\r\n`;\r\n\r\nexport default class Channels extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeChannel: '',\r\n            // playerType: 0,\r\n            // oldState: '',\r\n            url: null,\r\n            playing: true,\r\n            controls: false,\r\n            volume: 0.8,\r\n            muted: false,\r\n            played: 0,\r\n            loaded: 0,\r\n        }\r\n        this.selectChannel = this.selectChannel.bind(this);\r\n        this.playChannel = this.playChannel.bind(this);\r\n        // this.handleLoad = this.handleLoad.bind(this);\r\n    }\r\n\r\n    // create the channel buttons function\r\n    createButtons = () => {\r\n        let buttons = [];\r\n        channelNames.forEach(channel => {\r\n            buttons.push(<button key={channel.name} type=\"button\" className = \"btn btn-outline-info mt-2 mr-2\" onClick={this.selectChannel}>{channel.name}</button>)\r\n        });\r\n        return buttons;\r\n    }\r\n\r\n    // set active channel name\r\n    selectChannel = event => {\r\n        let name = event.target.textContent\r\n        let ch = channelNames.filter(channel => channel.name === name);\r\n        this.setState({\r\n            activeChannel: event.target.textContent,\r\n            url: ch[0].url\r\n        })\r\n    }\r\n\r\n    // set channel url\r\n\r\n    // handle new url\r\n    // handleLoad = name => {\r\n    //     let ch = channelNames.filter(channel => channel.name === name);\r\n    //     return ch.url;\r\n    // }\r\n    // when paused\r\n\r\n    // player reference\r\n\r\n    // Player creation and use\r\n    playChannel = () => {\r\n        if(this.state.activeChannel != '') {\r\n            return <p className = \"text-center\">the url is: {this.state.url}</p>\r\n            // return (<p className=\"text-center\">{this.state.url}</p>)\r\n            // <ReactPlayer \r\n            //     ref = {this.ref}\r\n            //     className = \"react-player\"\r\n            //     width = \"100%\"\r\n            //     height = \"100%\"\r\n            //     url = {this.handleLoad(this.state.url)}\r\n            //     playing = {this.state.playing}\r\n            //     controls = {this.state.controls}\r\n            //     volume = {this.state.volume}\r\n            //     muted = {this.state.muted} />\r\n        }else {\r\n            return <p className = \"text-center\">my nigga error!</p> \r\n            // return (<p className=\"text-center\">Select a channel to stream.</p>) \r\n        }\r\n        // if(this.state.activeChannel != '') {\r\n        //     return (\r\n        //         <p className=\"text-center\">{this.state.activeChannel}</p>\r\n        //         // <MyPlayer url = {channels[this.state.current]} />\r\n        //         // <NewPlayer url = {channels[this.state.current]} playerType={this.state.playerType} />\r\n        //     )\r\n        // }else {\r\n        //     return <p className=\"text-center\">Select a channel to stream.</p>\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>     \r\n                <StyledDiv>\r\n                    {this.createButtons()}\r\n                </StyledDiv>\r\n                <hr className=\"hr\"/>\r\n                {this.playChannel()}\r\n            </Layout>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}