{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\panag\\\\Documents\\\\Programming\\\\projects\\\\tv_app\\\\pages\\\\Channels.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport Layout from './Layout';\nimport styled from 'styled-components';\nimport Player from 'react-hls-player';\nlet channels = {\n  Ant1: \"https://antennalivesp-lh.akamaihd.net/i/live_1@715138/index_800_av-p.m3u8\",\n  Alpha: \"https://alphalive-i.akamaihd.net/hls/live/682300/live/high/prog_index.m3u8\",\n  Mega: \"https://c98db5952cb54b358365984178fb898a.msvdn.net/live/S86713049/gonOwuUacAxM/playlist.m3u8\",\n  Star: \"https://cdnapisec.siliconweb.com/p/713821/sp/0/playManifest/entryId/1_fp7fyi3j/format/applehttp/protocol/https/flavorParamId/0/manifest.m3u8\",\n  Skai: \"https://youtu.be/CmqbY_Gzsdo\",\n  Ert1: \"https://ert-live.siliconweb.com/media/ert_1/ert_1medium.m3u8\",\n  Ert2: \"https://ert-live.siliconweb.com/media/ert_2/ert_2medium.m3u8\",\n  'Ert Sports': \"https://ert-live.siliconweb.com/media/ert_sports/ert_sportshigh.m3u8\"\n};\nconst StyledDiv = styled.div`\n    width: 580px !important;\n    margin: 0 auto !important;\n`;\nexport default class Channels extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"createButtons\", items => {\n      let names = Object.keys(channels);\n      let buttons = [];\n      names.forEach(key => {\n        buttons.push(__jsx(\"button\", {\n          key: key,\n          type: \"button\",\n          className: \"btn btn-outline-info mt-2 mr-2\",\n          onClick: this.selectChannel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 26\n          }\n        }, key));\n      });\n      return buttons;\n    });\n\n    _defineProperty(this, \"selectChannel\", event => {\n      this.setState({\n        current: event.target.textContent\n      });\n    });\n\n    _defineProperty(this, \"playChannel\", () => {\n      // return this.state.current === ''? <p className=\"text-center\">Select a channel to stream.</p>: <p className=\"text-center\">The selected channel is {this.state.current}</p>\n      if (this.state.current != '') {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }\n        }, __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }\n        }, \" url = \", channels[this.state.current], \" \"));\n      } else {\n        __jsx(\"p\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }\n        }, \"Select a channel to stream.\");\n      }\n    });\n\n    this.state = {\n      current: ''\n    };\n    this.selectChannel = this.selectChannel.bind(this);\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, __jsx(StyledDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, this.createButtons()), __jsx(\"hr\", {\n      className: \"hr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }), this.playChannel());\n  }\n\n}","map":{"version":3,"sources":["C:/Users/panag/Documents/Programming/projects/tv_app/pages/Channels.js"],"names":["Link","Layout","styled","Player","channels","Ant1","Alpha","Mega","Star","Skai","Ert1","Ert2","StyledDiv","div","Channels","React","Component","constructor","props","items","names","Object","keys","buttons","forEach","key","push","selectChannel","event","setState","current","target","textContent","state","bind","render","createButtons","playChannel"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,IAAIC,QAAQ,GAAG;AACXC,EAAAA,IAAI,EAAE,2EADK;AAEXC,EAAAA,KAAK,EAAE,4EAFI;AAGXC,EAAAA,IAAI,EAAE,8FAHK;AAIXC,EAAAA,IAAI,EAAE,8IAJK;AAKXC,EAAAA,IAAI,EAAE,8BALK;AAMXC,EAAAA,IAAI,EAAE,8DANK;AAOXC,EAAAA,IAAI,EAAE,8DAPK;AAQX,gBAAc;AARH,CAAf;AAWA,MAAMC,SAAS,GAAGV,MAAM,CAACW,GAAI;;;CAA7B;AAKA,eAAe,MAAMC,QAAN,SAAuBC,KAAK,CAACC,SAA7B,CAAuC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,2CAQHC,KAAK,IAAI;AACrB,UAAIC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYlB,QAAZ,CAAZ;AACA,UAAImB,OAAO,GAAG,EAAd;AACAH,MAAAA,KAAK,CAACI,OAAN,CAAcC,GAAG,IAAI;AACjBF,QAAAA,OAAO,CAACG,IAAR,CAAa;AAAQ,UAAA,GAAG,EAAED,GAAb;AAAkB,UAAA,IAAI,EAAC,QAAvB;AAAgC,UAAA,SAAS,EAAC,gCAA1C;AAA2E,UAAA,OAAO,EAAE,KAAKE,aAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyGF,GAAzG,CAAb;AACH,OAFD;AAGA,aAAOF,OAAP;AACH,KAfkB;;AAAA,2CAiBHK,KAAK,IAAI;AACrB,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAEF,KAAK,CAACG,MAAN,CAAaC;AADZ,OAAd;AAGH,KArBkB;;AAAA,yCAuBL,MAAM;AACpB;AACI,UAAG,KAAKC,KAAL,CAAWH,OAAX,IAAsB,EAAzB,EAA6B;AACzB,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAW1B,QAAQ,CAAC,KAAK6B,KAAL,CAAWH,OAAZ,CAAnB,MADJ,CADJ;AAKH,OAND,MAMM;AACF;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;AACJ,KAlCkB;;AAEf,SAAKG,KAAL,GAAa;AACTH,MAAAA,OAAO,EAAE;AADA,KAAb;AAGA,SAAKH,aAAL,GAAqB,KAAKA,aAAL,CAAmBO,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AAgCDC,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,aAAL,EADL,CADJ,EAII;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKK,KAAKC,WAAL,EALL,CADJ;AASH;;AAjDiD","sourcesContent":["import Link from 'next/link';\r\nimport Layout from './Layout';\r\nimport styled from 'styled-components';\r\nimport Player from 'react-hls-player';\r\n\r\nlet channels = {\r\n    Ant1: \"https://antennalivesp-lh.akamaihd.net/i/live_1@715138/index_800_av-p.m3u8\",\r\n    Alpha: \"https://alphalive-i.akamaihd.net/hls/live/682300/live/high/prog_index.m3u8\",\r\n    Mega: \"https://c98db5952cb54b358365984178fb898a.msvdn.net/live/S86713049/gonOwuUacAxM/playlist.m3u8\",\r\n    Star: \"https://cdnapisec.siliconweb.com/p/713821/sp/0/playManifest/entryId/1_fp7fyi3j/format/applehttp/protocol/https/flavorParamId/0/manifest.m3u8\",\r\n    Skai: \"https://youtu.be/CmqbY_Gzsdo\",\r\n    Ert1: \"https://ert-live.siliconweb.com/media/ert_1/ert_1medium.m3u8\",\r\n    Ert2: \"https://ert-live.siliconweb.com/media/ert_2/ert_2medium.m3u8\",\r\n    'Ert Sports': \"https://ert-live.siliconweb.com/media/ert_sports/ert_sportshigh.m3u8\",\r\n}\r\n\r\nconst StyledDiv = styled.div`\r\n    width: 580px !important;\r\n    margin: 0 auto !important;\r\n`;\r\n\r\nexport default class Channels extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            current: ''\r\n        }\r\n        this.selectChannel = this.selectChannel.bind(this);\r\n    }\r\n\r\n    createButtons = items => {\r\n        let names = Object.keys(channels);\r\n        let buttons = [];\r\n        names.forEach(key => {\r\n            buttons.push(<button key={key} type=\"button\" className=\"btn btn-outline-info mt-2 mr-2\" onClick={this.selectChannel}>{key}</button>)\r\n        });\r\n        return buttons;\r\n    }\r\n\r\n    selectChannel = event => {\r\n        this.setState({\r\n            current: event.target.textContent\r\n        })\r\n    }\r\n\r\n    playChannel = () => {\r\n    // return this.state.current === ''? <p className=\"text-center\">Select a channel to stream.</p>: <p className=\"text-center\">The selected channel is {this.state.current}</p>\r\n        if(this.state.current != '') {\r\n            return (\r\n                <div>\r\n                    <p> url = {channels[this.state.current]} </p>\r\n                </div>\r\n            )\r\n        }else {\r\n            <p className=\"text-center\">Select a channel to stream.</p>\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Layout>     \r\n                <StyledDiv>\r\n                    {this.createButtons()}\r\n                </StyledDiv>\r\n                <hr className=\"hr\"/>\r\n                {this.playChannel()}\r\n            </Layout>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}